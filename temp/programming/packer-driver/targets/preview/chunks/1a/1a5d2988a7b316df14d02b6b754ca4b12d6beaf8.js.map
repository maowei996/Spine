{"version":3,"sources":["file:///Users/mac/WorkSpace/maowei/spine/assets/src/Machine.ts"],"names":["_decorator","Component","Sprite","assetManager","Texture2D","sp","FileTools","Html5","EventManager","EventType","ccclass","property","Machine","Skeleton","spineJson","spineAtlas","spineTexture","start","getInstance","on","onEvent","data","console","log","eventType","_eventType","skeleton","REFRESH_SKELETON","skeletonData","param","animation","CHANGE_SPINE","CHANGE_SPINE_ANIMATION","UPDATE_SPINE_SKIN","OPENOROFF_DEBUG","CHANGE_SPINE_LOOP","loop","onTest","spr","self","HtmlFileInput","file","LoadImage","texture","node","active","loadJson","readLocalFile","loadAtlas","loadRemoto","base","loadRemote","err","asset","cc","error","image","spriteFrame","addSpine","SkeletonData","skeletonJson","atlasText","textures","textureNames","onLoadSpine2","ske","atlas","loadAny","url","ext","assets","imageAsset","onDisable","off"],"mappings":"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","sourcesContent":["\n\nimport { _decorator, Component, Node,Sprite,assetManager,Texture2D,SpriteFrame,ImageAsset,sp } from 'cc';\nimport FileTools from './Tool/FileTools';\nimport { Html5 } from './Tool/Html5';\nimport EventManager from './EventManager';\nimport {EventType, EventData} from './Define'\n\n\nconst { ccclass, property } = _decorator;\n\n@ccclass('Machine')\nexport class Machine extends Component {\n\n  @property(Sprite)\n  sp: Sprite = null!;\n\n  @property(sp.Skeleton)\n  skeleton: sp.Skeleton = null!;\n\n  spineJson :any = null;\n  spineAtlas : any = null;\n  spineTexture: any = null;\n\n\n\n\n  start() {\n\n    EventManager.getInstance().on('machine', this.onEvent, this);\n    \n  }\n\n\n  onEvent (data: EventData) {\n    console.log('[Machine]收到了事件消息_type:',data.eventType)\n\n    let _eventType = data.eventType;\n    let skeleton = this.skeleton\n\n    if(_eventType == EventType.REFRESH_SKELETON) {\n      skeleton.skeletonData = data.param.skeletonData;\n      skeleton.animation = 'beiji';\n    }\n    else if(_eventType == EventType.CHANGE_SPINE){\n\n    }\n    else if(_eventType == EventType.CHANGE_SPINE_ANIMATION){\n\n    }\n    else if(_eventType == EventType.UPDATE_SPINE_SKIN){\n\n    }\n    else if(_eventType == EventType.OPENOROFF_DEBUG){\n\n    }\n    else if(_eventType == EventType.CHANGE_SPINE_LOOP){\n      skeleton.loop = data.param.loop;\n    }\n\n  }\n\n\n\n  onTest() :void {\n    console.log('==========点击测试按钮！！');\n\n    let spr = this.sp;\n\n    let self = this;\n    /***/\n    Html5.HtmlFileInput(function( file : any ){\n\n      console.log('===========选择文件成功-data:',file);\n\n      Html5.LoadImage(file,spr, function( texture: Texture2D ){\n\n        self.spineTexture = texture;\n        spr.node.active = false;\n\n      });\n\n\n    });\n  }\n\n\n  loadJson() {\n    let self = this;\n    Html5.HtmlFileInput(function( file : any ){\n\n      FileTools.getInstance().readLocalFile(file,1,function( data : any ){\n        console.log('===========读取Json成功-data:',data);\n        self.spineJson = data\n      });\n\n    });\n  }\n\n  loadAtlas() {\n    let self = this;\n    Html5.HtmlFileInput(function( file : any ){\n\n      FileTools.getInstance().readLocalFile(file,1,function( data : any ){\n        console.log('===========读取Atlas成功-data:',data);\n        \n        self.spineAtlas = data\n\n\n        //self.addSpine();\n\n      });\n\n    });\n  }\n\n  loadRemoto () {\n    //const base = url;\n    //assetManager.loadRemote(base, { ext: '.png' }, (err: Error, texture: Texture2D) => {\n\n    let sp = this.sp;\n    let base = 'http://127.0.0.1/image/Socre_CandyMonsters_Scatter.png';\n    assetManager.loadRemote(base, (err, asset: ImageAsset) => {\n      if (err) return cc.error(err);\n      console.log('asset:',asset)\n\n      let texture = new Texture2D();\n      texture.image = asset;\n\n      // sp.spriteFrame = new SpriteFrame();\n      // sp.spriteFrame.setTexture(texture)\n      // sp.spriteFrame._texture = texture\n      // sp.spriteFrame._texture = texture.getHtmlElementObj()\n      sp.spriteFrame.texture = texture\n    })\n  }\n\n\n\n  private addSpine () {\n    // let spineNode = new Node();\n    // spineNode.name = 'newSpine';\n    // spineNode.setPosition(0,0);\n    // var skeleton = spineNode.addComponent(sp.Skeleton);\n    // // skeleton.parent = this.node;\n    // cc.find(\"Canvas\").addChild(spineNode);\n\n\n    let skeleton = this.skeleton\n\n\n    let asset = new sp.SkeletonData();\n    asset.skeletonJson = this.spineJson;\n    asset.atlasText = this.spineAtlas;\n    asset.textures = [this.spineTexture];\n    asset.textureNames = ['test_guai_001.png'];\n\n\n    skeleton.skeletonData = asset;\n    skeleton.animation = 'beiji';\n    //skeleton._updateSkeletonData();\n\n\n  }\n\n\n  onLoadSpine2() {\n    // let comp = this.getComponent('sp.Skeleton') as sp.Skeleton;\n    // var spineNode = new cc.Node();\n    // spineNode.name = 'newSpine';\n    // spineNode.setPosition(49, -237);\n    // var skeleton = spineNode.addComponent(sp.Skeleton);\n    // cc.find(\"Canvas\").addChild(spineNode);\n\n    let skeleton = this.skeleton\n\n    let image = \"http://127.0.0.1/test_guai_001.png\";\n    let ske = \"http://127.0.0.1/test_guai_001.json\";\n    let atlas = \"http://127.0.0.1/test_guai_001.atlas\";\n    assetManager.loadAny([{ url: atlas, ext: '.txt' }, { url: ske, ext: '.txt' }], (error, assets) => {\n        assetManager.loadRemote(image, (error, imageAsset:ImageAsset) => {\n\n            let texture = new Texture2D();\n            texture.image = imageAsset;\n\n\n            let asset = new sp.SkeletonData();\n            asset.skeletonJson = assets[1];\n            asset.atlasText = assets[0];\n            asset.textures = [texture];\n            asset.textureNames = ['test_guai_001.png'];\n            \n            skeleton.skeletonData = asset;\n            skeleton.animation = 'beiji';\n        });\n    });\n  }\n\n\n\n  onDisable () {\n    EventManager.getInstance().off('machine',this.onEvent,this);\n  }\n\n}"]}