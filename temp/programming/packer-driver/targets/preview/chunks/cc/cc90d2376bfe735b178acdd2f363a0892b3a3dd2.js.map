{"version":3,"sources":["file:///Users/mac/WorkSpace/maowei/spine/assets/src/Machine.ts"],"names":["_decorator","Component","Sprite","assetManager","Texture2D","sp","FileTools","Html5","ccclass","property","Machine","Skeleton","spineJson","spineAtlas","spineTexture","start","onTest","console","log","spr","self","HtmlFileInput","file","LoadImage","texture","node","active","loadJson","getInstance","readLocalFile","data","loadAtlas","loadRemoto","base","loadRemote","err","asset","cc","error","image","spriteFrame","addSpine","skeleton","SkeletonData","skeletonJson","atlasText","textures","textureNames","skeletonData","animation","onLoadSpine","find","destroy","spineNode","Node","name","setPosition","addComponent","addChild","imageUrl","skeUrl","atlasUrl","loader","load","url","type","atlasJson","_uuid","onLoadSpine2","ske","atlas","loadAny","ext","assets","imageAsset"],"mappings":"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","sourcesContent":["\n\nimport { _decorator, Component, Node,Sprite,assetManager,Texture2D,SpriteFrame,ImageAsset,sp } from 'cc';\nimport FileTools from './Tool/FileTools';\nimport { Html5 } from './Tool/Html5';\n\n\nconst { ccclass, property } = _decorator;\n\n@ccclass('Machine')\nexport class Machine extends Component {\n\n  @property(Sprite)\n  sp: Sprite = null!;\n\n  @property(sp.Skeleton)\n  skeleton: sp.Skeleton = null!;\n\n\n  spineJson :any = null;\n  spineAtlas : any = null;\n  spineTexture: any = null;\n\n\n  start() {\n\n    \n    \n  }\n\n\n\n\n\n\n  onTest() :void {\n    console.log('==========点击测试按钮！！');\n\n    let spr = this.sp;\n\n    let self = this;\n    /***/\n    Html5.HtmlFileInput(function( file : any ){\n\n      console.log('===========选择文件成功-data:',file);\n\n      Html5.LoadImage(file,spr, function( texture: Texture2D ){\n\n        self.spineTexture = texture;\n        spr.node.active = false;\n\n      });\n\n\n    });\n  }\n\n\n  loadJson() {\n    let self = this;\n    Html5.HtmlFileInput(function( file : any ){\n\n      FileTools.getInstance().readLocalFile(file,1,function( data : any ){\n        console.log('===========读取Json成功-data:',data);\n        self.spineJson = data\n      });\n\n    });\n  }\n\n  loadAtlas() {\n    let self = this;\n    Html5.HtmlFileInput(function( file : any ){\n\n      FileTools.getInstance().readLocalFile(file,1,function( data : any ){\n        console.log('===========读取Atlas成功-data:',data);\n        \n        self.spineAtlas = data\n\n\n        //self.addSpine();\n\n      });\n\n    });\n  }\n\n  loadRemoto () {\n    //const base = url;\n    //assetManager.loadRemote(base, { ext: '.png' }, (err: Error, texture: Texture2D) => {\n\n    let sp = this.sp;\n    let base = 'http://127.0.0.1/image/Socre_CandyMonsters_Scatter.png';\n    assetManager.loadRemote(base, (err, asset: ImageAsset) => {\n      if (err) return cc.error(err);\n      console.log('asset:',asset)\n\n      let texture = new Texture2D();\n      texture.image = asset;\n\n      // sp.spriteFrame = new SpriteFrame();\n      // sp.spriteFrame.setTexture(texture)\n      // sp.spriteFrame._texture = texture\n      // sp.spriteFrame._texture = texture.getHtmlElementObj()\n      sp.spriteFrame.texture = texture\n    })\n  }\n\n\n\n  private addSpine () {\n    // let spineNode = new Node();\n    // spineNode.name = 'newSpine';\n    // spineNode.setPosition(0,0);\n    // var skeleton = spineNode.addComponent(sp.Skeleton);\n    // // skeleton.parent = this.node;\n    // cc.find(\"Canvas\").addChild(spineNode);\n\n\n    let skeleton = this.skeleton\n\n\n    let asset = new sp.SkeletonData();\n    asset.skeletonJson = this.spineJson;\n    asset.atlasText = this.spineAtlas;\n    asset.textures = [this.spineTexture];\n    asset.textureNames = ['test_guai_001.png'];\n\n\n    skeleton.skeletonData = asset;\n    skeleton.animation = 'beiji';\n    //skeleton._updateSkeletonData();\n\n\n  }\n\n\n  onLoadSpine() {\n    if (cc.find('Canvas/newSpine')) {\n        cc.find('Canvas/newSpine').destroy();\n    }\n    else {\n        var spineNode = new cc.Node();\n        spineNode.name = 'newSpine';\n        spineNode.setPosition(49, -237);\n        var skeleton = spineNode.addComponent(sp.Skeleton);\n        cc.find(\"Canvas\").addChild(spineNode);\n        //TODO : 此处为你的远程资源路径\n        // var imageUrl = \"http://127.0.0.1:7456/assets/resources/spineRaptor/raptor.png\";\n        // var skeUrl = \"http://127.0.0.1:7456/assets/resources/spineRaptor/raptor.json\";\n        // var atlasUrl = \"http://127.0.0.1:7456/assets/resources/spineRaptor/raptor.atlas\";\n\n\n        var imageUrl = \"http://127.0.0.1/test_guai_001.png\";\n        var skeUrl = \"http://127.0.0.1/test_guai_001.json\";\n        var atlasUrl = \"http://127.0.0.1/test_guai_001.atlas\";\n    \n        cc.loader.load(imageUrl, (error, texture) => {\n            cc.loader.load({ url: atlasUrl, type: 'txt' }, (error, atlasJson) => {\n                cc.loader.load({ url: skeUrl, type: 'txt' }, (error, spineJson) => {\n\n                    var asset = new sp.SkeletonData();\n                    asset._uuid = skeUrl;\n                    asset.skeletonJson = spineJson;\n                    asset.atlasText = atlasJson;\n                    asset.textures = [texture];\n                    asset.textureNames = ['test_guai_001.png'];\n\n                    skeleton.skeletonData = asset;\n                    skeleton.animation = 'beiji';\n                    // skeleton._updateSkeletonData();\n                });\n            });\n        });\n    }\n  }\n\n\n  onLoadSpine2() {\n    // let comp = this.getComponent('sp.Skeleton') as sp.Skeleton;\n    // var spineNode = new cc.Node();\n    // spineNode.name = 'newSpine';\n    // spineNode.setPosition(49, -237);\n    // var skeleton = spineNode.addComponent(sp.Skeleton);\n    // cc.find(\"Canvas\").addChild(spineNode);\n\n\n    let skeleton = this.skeleton\n\n    let image = \"http://127.0.0.1/test_guai_001.png\";\n    let ske = \"http://127.0.0.1/test_guai_001.json\";\n    let atlas = \"http://127.0.0.1/test_guai_001.atlas\";\n    assetManager.loadAny([{ url: atlas, ext: '.txt' }, { url: ske, ext: '.txt' }], (error, assets) => {\n        assetManager.loadRemote(image, (error, imageAsset:ImageAsset) => {\n\n            let texture = new Texture2D();\n            texture.image = imageAsset;\n\n\n            let asset = new sp.SkeletonData();\n            asset.skeletonJson = assets[1];\n            asset.atlasText = assets[0];\n            asset.textures = [texture];\n            asset.textureNames = ['test_guai_001.png'];\n            \n            skeleton.skeletonData = asset;\n            skeleton.animation = 'beiji';\n        });\n    });\n  }\n\n}\n\n\n\n"]}