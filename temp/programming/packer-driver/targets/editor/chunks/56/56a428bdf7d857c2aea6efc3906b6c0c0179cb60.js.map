{"version":3,"sources":["file:///Users/mac/WorkSpace/maowei/spine/assets/src/Menu/FileOper.ts"],"names":["_decorator","Component","sp","Html5","SpineData","SkeletManager","EventManager","ccclass","property","FileOper","_bComplete","_bBinary","_bJson","_jsonData","_atlasData","_skeletData","_textureData","_pngName","_url","rest","checkComplect","console","log","addSkeletonData","asset","SkeletonData","skeletonJson","atlasText","textures","textureNames","_nativeAsset","_uuid","_nativeUrl","data","bJson","bBinary","name","url","skeletonData","skins","animations","getInstance","add","onPng","self","readTexture2d","texture","emit","onJsonData","readLocalFile","onAtlasData","onSkelData"],"mappings":"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","sourcesContent":["import { Html5 } from '../Tool/Html5';\nimport FileTools from '../Tool/FileTools';\n\nimport { SpineData } from '../Data/SpineData';\nimport { SkeletManager } from '../Data/SkeletManager';\nimport EventManager from '../EventManager';\n\nimport { _decorator, Component, Node, Texture2D,sp,EventTarget } from 'cc';\nconst { ccclass, property } = _decorator;\n\n\n\n@ccclass('FileOper')\nexport class FileOper extends Component {\n\n  private _bComplete : boolean = false;\n  private _bBinary :boolean = false;\n  private _bJson:boolean = false;\n\n  private _jsonData : any = null;\n  private _atlasData: string = null;\n  private _skeletData: any = null;\n  private _textureData : Texture2D = null;\n\n  private _pngName : string = 'defa'\n  private _url: string = '';\n\n\n  private rest(): void {\n    this._bComplete = false;\n    this._bBinary = false;\n    this._bJson = false;\n    this._jsonData  = null;\n    this._atlasData = null;\n    this._skeletData = null;\n    this._textureData = null\n    this._pngName  = 'defa'\n    this._url = '';\n  }\n\n\n  private checkComplect() :void {\n\n    if(this._atlasData && this._textureData){\n\n      if(this._jsonData || this._skeletData) {\n\n        console.log('[FileOper]:数据读取完成');\n\n        this._bComplete = true;\n\n        this._bJson = this._jsonData || false;\n        this._bBinary = this._skeletData || false;\n      }\n    }\n\n    if (this._bComplete) {\n\n      this.addSkeletonData();\n\n    }\n\n  }\n\n\n  private addSkeletonData (): void {\n\n    let asset = new sp.SkeletonData();\n    \n    if (this._bJson){\n      asset.skeletonJson = this._jsonData;\n      asset.atlasText = this._atlasData;\n      asset.textures = [this._textureData];\n      asset.textureNames = [this._pngName];\n    }\n    else\n    {\n      asset._nativeAsset = this._skeletData;\n      asset.atlasText = this._atlasData;\n      asset.textures = [this._textureData];\n      asset.textureNames = [this._pngName];\n      asset._uuid = this._pngName + 'good';\n\n      // 传入一个二进制路径用作 initSkeleton 时的 filePath 参数使用\n      asset._nativeUrl = 'sdsd';\n    }\n\n    let data = new SpineData();\n    data.bJson = this._bJson;\n    data.bBinary = this._bBinary;\n    data.name = this._pngName;\n    data.url = this._url;\n    data._jsonData = this._jsonData;\n    data._atlasData = this._atlasData;\n    data._skeletData = this._skeletData;\n    data._textureData = this._textureData;\n    data.skeletonData = asset;\n\n    data.skins = [];\n    data.animations = [];\n\n    SkeletManager.getInstance().add(data);\n\n    \n    this.rest();\n  }\n\n\n\n\n  onPng () {\n    let self = this;\n    Html5.readTexture2d(function(name: string, url: string, texture: Texture2D ){\n      console.log('===========选择文件成功-data:',name);\n      self._textureData = texture;\n      self._pngName = name;\n      self._url = url;\n\n      self.checkComplect();\n\n      EventManager.getInstance().emit('machine', 1);\n    });\n  }\n\n  onJsonData () {\n\n    let self = this;\n    Html5.readLocalFile(function( data : any ){\n      console.log('===========读取Json成功-data:',data);\n      self._jsonData = data\n      self.checkComplect();\n    });\n\n  }\n\n  onAtlasData() {\n    let self = this;\n    Html5.readLocalFile(function( data : any ){\n      console.log('===========读取Atlas成功-data:',data);\n      self._atlasData = data\n      self.checkComplect();\n    });\n  }\n\n  onSkelData () {\n\n    this.checkComplect();\n  }\n\n  \n\n\n}\n\n"]}