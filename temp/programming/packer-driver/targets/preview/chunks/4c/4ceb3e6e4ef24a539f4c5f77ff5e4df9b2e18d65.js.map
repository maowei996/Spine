{"version":3,"sources":["file:///Users/weimao/XiaYu/VScodeProject/CocosCreate/spine/assets/src/Tool/FileTools.ts"],"names":["FileTools","ReadFileType","getInstance","_instance","readLocalFile","_file","_readfileType","_cb","console","log","reader","FileReader","onload","event","result","readyState","DONE","DATA_URL","readAsDataURL","TEXT","readAsText","BINARY","readAsBinaryString","ARRAYBUFFER","readAsArrayBuffer","saveData","content","fileNmae","textFileAsBlob","Blob","type","downloadLink","document","createElement","download","innerHTML","window","webkitURL","href","createObjectURL","URL","style","display","body","appendChild","click"],"mappings":";;;iBAWqBA,S;;;;;;;;;;;;;iBARhBC,Y;AAAAA,QAAAA,Y,CAAAA,Y;AAAAA,QAAAA,Y,CAAAA,Y;AAAAA,QAAAA,Y,CAAAA,Y;AAAAA,QAAAA,Y,CAAAA,Y;SAAAA,Y,KAAAA,Y;;yBAQgBD,S,GAAN,MAAMA,SAAN,CAAgB;AAIJ,eAAXE,WAAW,GAAa;AAEpC,cAAG,CAACF,SAAS,CAACG,SAAd,EAAwB;AACtBH,YAAAA,SAAS,CAACG,SAAV,GAAsB,IAAIH,SAAJ,EAAtB;AACD;;AAED,iBAAOA,SAAS,CAACG,SAAjB;AACD;AAED;AACF;AACA;AACA;AACA;AACA;AACA;;;AACSC,QAAAA,aAAa,CAACC,KAAD,EAAaC,aAAb,EAAyCC,GAAzC,EAA4D;AAE9E,cAAG,CAACF,KAAJ,EAAU;AACRG,YAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACA;AACD;;AAED,cAAIC,MAAM,GAAG,IAAIC,UAAJ,EAAb;;AACAD,UAAAA,MAAM,CAACE,MAAP,GAAgB,UAAUC,KAAV,EAAsB;AACpC,gBAAGA,KAAH,EAAS,CACP;AACD;;AAED,gBAAIC,MAAM,GAAG,IAAb;;AAEA,gBAAGJ,MAAM,CAACK,UAAP,IAAqBJ,UAAU,CAACK,IAAnC,EAAwC;AACtCR,cAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA6BI,KAA7B,EAAmCA,KAAK,CAACC,MAAzC;AACAA,cAAAA,MAAM,GAAGJ,MAAM,CAACI,MAAhB;AACD;;AAEDP,YAAAA,GAAG,IAAIA,GAAG,CAACO,MAAD,CAAV;AACD,WAbD;;AAeA,cAAGR,aAAa,IAAIL,YAAY,CAACgB,QAAjC,EAA2C;AACzCP,YAAAA,MAAM,CAACQ,aAAP,CAAqBb,KAArB;AACD,WAFD,MAGK,IAAGC,aAAa,IAAIL,YAAY,CAACkB,IAAjC,EAAuC;AAC1CT,YAAAA,MAAM,CAACU,UAAP,CAAkBf,KAAlB;AACD,WAFI,MAGA,IAAGC,aAAa,IAAIL,YAAY,CAACoB,MAAjC,EAAyC;AAC5CX,YAAAA,MAAM,CAACY,kBAAP,CAA0BjB,KAA1B;AACD,WAFI,MAGA,IAAGC,aAAa,IAAIL,YAAY,CAACsB,WAAjC,EAA8C;AACjDb,YAAAA,MAAM,CAACc,iBAAP,CAAyBnB,KAAzB;AACD;AACF;;AAGMoB,QAAAA,QAAQ,CAACC,OAAD,EAAeC,QAAf,EAAmC;AAChD;AACA;AACA;AAEA,cAAIC,cAAc,GAAG,IAAIC,IAAJ,CAAS,CAACH,OAAD,CAAT,EAAoB;AAACI,YAAAA,IAAI,EAAC;AAAN,WAApB,CAArB;AACA,cAAIC,YAAY,GAAGC,QAAQ,CAACC,aAAT,CAAuB,GAAvB,CAAnB;AACAF,UAAAA,YAAY,CAACG,QAAb,GAAwBP,QAAxB;AACAI,UAAAA,YAAY,CAACI,SAAb,GAAyB,eAAzB;;AACA,cAAIC,MAAM,CAACC,SAAP,IAAoB,IAAxB,EACA;AACEN,YAAAA,YAAY,CAACO,IAAb,GAAoBF,MAAM,CAACC,SAAP,CAAiBE,eAAjB,CAAiCX,cAAjC,CAApB;AACD,WAHD,MAKA;AACEG,YAAAA,YAAY,CAACO,IAAb,GAAoBF,MAAM,CAACI,GAAP,CAAWD,eAAX,CAA2BX,cAA3B,CAApB;AACAG,YAAAA,YAAY,CAACU,KAAb,CAAmBC,OAAnB,GAA6B,MAA7B;AACAV,YAAAA,QAAQ,CAACW,IAAT,CAAcC,WAAd,CAA0Bb,YAA1B;AACD;;AAEDA,UAAAA,YAAY,CAACc,KAAb;AACD;;AA/E4B,O;;AAAV7C,MAAAA,S,CAEJG,S,GAAY,I","sourcesContent":["\n\n\nenum ReadFileType {\n  DATA_URL,\n  TEXT,\n  BINARY,\n  ARRAYBUFFER,\n}\n\n\nexport default class FileTools {\n\n  private static _instance = null;\n\n  public static getInstance():FileTools {\n\n    if(!FileTools._instance){\n      FileTools._instance = new FileTools();\n    }\n\n    return FileTools._instance;\n  }\n\n  /**\n   * 读取本地文件数据\n   * 数据\n   * @param {File} _file\n   * @param {ReadFileType} _readfileType\n   * @param {((result: string | ArrayBuffer) => void)} _cb\n   */\n  public readLocalFile(_file:File, _readfileType:ReadFileType, _cb:Function):void {\n\n    if(!_file){\n      console.log('readLocalFile_ file:null!!');\n      return;\n    }\n\n    let reader = new FileReader();\n    reader.onload = function (event: any) {\n      if(event){\n        //console.log('readLocalFile:',event,event.result);\n      }\n\n      let result = null;\n\n      if(reader.readyState == FileReader.DONE){\n        console.log('readLocalFile:',event,event.result);\n        result = reader.result;\n      }\n\n      _cb && _cb(result);\n    }\n\n    if(_readfileType == ReadFileType.DATA_URL) {\n      reader.readAsDataURL(_file);\n    }\n    else if(_readfileType == ReadFileType.TEXT) {\n      reader.readAsText(_file);\n    }\n    else if(_readfileType == ReadFileType.BINARY) {\n      reader.readAsBinaryString(_file);\n    }\n    else if(_readfileType == ReadFileType.ARRAYBUFFER) {\n      reader.readAsArrayBuffer(_file);\n    }\n  }\n\n\n  public saveData(content: any, fileNmae: any):void {\n    // if(!cc.sys.isBrowser){\n    //   return;\n    // }\n\n    let textFileAsBlob = new Blob([content], {type:'application/json'});\n    let downloadLink = document.createElement(\"a\");\n    downloadLink.download = fileNmae;\n    downloadLink.innerHTML = \"Download File\";\n    if (window.webkitURL != null)\n    {\n      downloadLink.href = window.webkitURL.createObjectURL(textFileAsBlob);\n    }\n    else\n    {\n      downloadLink.href = window.URL.createObjectURL(textFileAsBlob);\n      downloadLink.style.display = \"none\";\n      document.body.appendChild(downloadLink);\n    }\n\n    downloadLink.click();\n  }\n}"]}