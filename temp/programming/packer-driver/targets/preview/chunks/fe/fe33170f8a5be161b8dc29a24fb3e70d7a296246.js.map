{"version":3,"sources":["file:///Users/weimao/XiaYu/VScodeProject/CocosCreate/spine/assets/src/Menu/FileOper.ts"],"names":["_decorator","Component","sp","EventManager","Html5","SpineData","SkeletManager","EventType","EventData","ccclass","property","FileOper","_bComplete","_bBinary","_bJson","_jsonData","_atlasData","_skeletData","_textureData","_pngName","_url","_key","rest","node","active","checkComplect","console","log","addSkeletonData","asset","SkeletonData","skeletonJson","atlasText","textures","textureNames","_nativeAsset","_uuid","_nativeUrl","data","bJson","bBinary","name","url","key","skeletonData","skeleton","width","height","version","spine","_skeletonJson","animations","skins","events","bones","length","slots","push","Array","iterator","defanimation","getInstance","add","param","eventType","REFRESH_SKELETON","emit","onPng","self","readTexture2d","texture","onJsonData","readLocalFile","onAtlasData","split","onSkelData"],"mappings":"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","sourcesContent":["import FileTools from '../Tool/FileTools';\nimport EventManager from '../EventManager';\n\nimport { Html5 } from '../Tool/Html5';\nimport { SpineData } from '../Data/SpineData';\nimport { SkeletManager } from '../Data/SkeletManager';\nimport {EventType, EventData} from '../Define';\nimport { _decorator, Component, Node, Texture2D,sp } from 'cc';\nconst { ccclass, property } = _decorator;\n\n\n\n@ccclass('FileOper')\nexport class FileOper extends Component {\n\n  private _bComplete : boolean = false;\n  private _bBinary :boolean = false;\n  private _bJson:boolean = false;\n\n  private _jsonData : any = null;\n  private _atlasData: string = null;\n  private _skeletData: any = null;\n  private _textureData : Texture2D = null;\n\n  private _pngName : string = 'defa'\n  private _url: string = '';\n  private _key: string = '';\n\n\n  private rest(): void {\n    this._bComplete = false;\n    this._bBinary = false;\n    this._bJson = false;\n    this._jsonData  = null;\n    this._atlasData = null;\n    this._skeletData = null;\n    this._textureData = null\n    this._pngName  = 'defa'\n    this._url = '';\n    this._key = '';\n    this.node.active = false;\n  }\n\n\n  private checkComplect() :void {\n\n    if(this._atlasData && this._textureData){\n\n      if(this._jsonData || this._skeletData) {\n\n        console.log('[FileOper]:数据读取完成');\n\n        this._bComplete = true;\n\n        this._bJson = this._jsonData || false;\n        this._bBinary = this._skeletData || false;\n      }\n    }\n\n    if (this._bComplete) {\n\n      this.addSkeletonData();\n\n    }\n\n  }\n\n\n  private addSkeletonData (): void {\n\n    let asset = new sp.SkeletonData();\n    \n    if (this._bJson){\n      asset.skeletonJson = this._jsonData;\n      asset.atlasText = this._atlasData;\n      asset.textures = [this._textureData];\n      asset.textureNames = [this._pngName];\n    }\n    else\n    {\n      asset._nativeAsset = this._skeletData;\n      asset.atlasText = this._atlasData;\n      asset.textures = [this._textureData];\n      asset.textureNames = [this._pngName];\n      asset._uuid = this._pngName + 'skel_spine';\n\n      // 传入一个二进制路径用作 initSkeleton 时的 filePath 参数使用\n      asset._nativeUrl = 'sdsd';\n    }\n\n    let data = new SpineData();\n    data.bJson = this._bJson;\n    data.bBinary = this._bBinary;\n    data.name = this._pngName;\n    data.url = this._url;\n    data.key = this._key;\n    data._jsonData = this._jsonData;\n    data._atlasData = this._atlasData;\n    data._skeletData = this._skeletData;\n    data._textureData = this._textureData;\n    data.skeletonData = asset;\n\n    if(asset.skeletonJson.skeleton){\n      data.width = asset.skeletonJson.skeleton.width;\n      data.height = asset.skeletonJson.skeleton.height;\n      data.version = asset.skeletonJson.skeleton.spine;\n    }\n\n    let _skeletonJson = asset.skeletonJson\n    let animations = _skeletonJson.animations || [];\n    let skins = _skeletonJson.skins || [];\n    let events = _skeletonJson.events || {};\n\n    data.bones = _skeletonJson.bones.length;\n    data.slots = _skeletonJson.slots.length;\n\n    for (const key in animations) {\n      data.animations.push(key);\n    }\n\n    if(skins instanceof Array){\n      for (const iterator of skins) {\n        data.skins.push(iterator.name);\n      }\n    } else{\n      data.skins.push('default');\n    }\n\n    for (const iterator in events) {\n      data.events.push(iterator);\n    }\n\n    data.defanimation = data.animations[0];\n\n    SkeletManager.getInstance().add(data);\n\n    let param: EventData = new EventData();\n    param.eventType = EventType.REFRESH_SKELETON\n    param.param = data;\n\n\n    console.log('SkeletonData:',asset);\n\n    EventManager.getInstance().emit('machine', param);\n    \n    this.rest();\n  }\n\n\n\n\n  onPng () {\n    let self = this;\n    Html5.readTexture2d(function(name: string, url: string, texture: Texture2D ){\n      self._textureData = texture;\n      self._pngName = name;\n      self._url = url;\n\n      self.checkComplect();\n    });\n  }\n\n  onJsonData () {\n\n    let self = this;\n    Html5.readLocalFile(function( name: string, data : any ){\n      self._jsonData = data\n      self.checkComplect();\n    });\n\n  }\n\n  onAtlasData() {\n    let self = this;\n    Html5.readLocalFile(function( name: string, data : any ){\n      self._atlasData = data\n      self._key = name.split('.')[0];\n      self.checkComplect();\n    });\n  }\n\n  onSkelData () {\n\n    let self = this;\n\n    Html5.readLocalFile(function( name: string, data : any ){\n\n      console.log('name:',name);\n      console.log('skel:',data);\n\n      self._skeletData = data;\n      self.checkComplect();\n    },2);\n  }\n  \n}"]}