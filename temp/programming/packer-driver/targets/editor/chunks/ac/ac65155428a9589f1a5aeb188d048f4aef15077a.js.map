{"version":3,"sources":["file:///Users/weimao/XiaYu/VScodeProject/CocosCreate/spine/assets/src/Menu/Menu.ts"],"names":["_decorator","Component","Node","SkeletManager","OptionScrollview","EventType","EventData","EventManager","ccclass","property","MenuType","Menu","_loop","start","updateOperPanle","operType","visible","fileOperPanel","active","FILE","animationPanel","ANIMATION","skinPanel","SKIN","onFileMenu","onSkeleron","SKEL","onAnimation","skelet","getInstance","console","log","array","animations","length","push","option","getComponent","setData","onSkin","skins","onToggleDebug","onToggleLoop","param","eventType","CHANGE_SPINE_LOOP","emit","inputEvent","data","number","Number","string","UPDATE_SCALE"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node } from 'cc';\nimport { SkeletManager } from '../Data/SkeletManager';\nimport { OptionScrollview } from './OptionScrollview';\nimport {EventType, EventData} from '../Define';\nimport EventManager from '../EventManager';\nconst { ccclass, property } = _decorator;\n\n\nenum MenuType {\n  FILE,\n  SKEL,\n  ANIMATION,\n  SKIN,\n}\n\n@ccclass('Menu')\nexport class Menu extends Component {\n\n  @property(Node)\n  fileOperPanel: Node = null;\n\n  @property(Node)\n  animationPanel: Node = null;\n\n  @property(Node)\n  skinPanel: Node = null;\n\n\n  _loop: Boolean = true;\n\n\n\n  start() {\n\n  }\n\n\n\n  private updateOperPanle( operType: MenuType, visible: boolean ): void {\n    this.fileOperPanel.active = (operType == MenuType.FILE) ? visible: false;\n    this.animationPanel.active = (operType == MenuType.ANIMATION)? visible: false;\n    this.skinPanel.active = (operType == MenuType.SKIN)? visible: false;\n  }\n\n\n  onFileMenu () {\n\n    let active = this.fileOperPanel.active;\n    this.fileOperPanel.active = !active;\n    this.updateOperPanle(MenuType.FILE, !active);\n  }\n\n\n  onSkeleron () {\n    this.updateOperPanle(MenuType.SKEL, false);\n\n  }\n\n  onAnimation() {\n    let active = this.animationPanel.active;\n    this.animationPanel.active = !active;\n    this.updateOperPanle(MenuType.ANIMATION, !active);\n\n    if(!active){\n\n      let skelet = SkeletManager.getInstance().skelet;\n      if(!skelet){\n        return console.log('[Menu]:not SpineData!!');\n      }\n\n      let array = skelet.animations || [];\n      if (array.length < 1 ) {\n        array.push('没有时间线!');\n        array.push('嘻嘻');\n      }\n\n      let option = this.animationPanel.getComponent(OptionScrollview);\n      option.setData(2,array);\n    }\n  }\n\n  onSkin(){\n    let active = this.skinPanel.active;\n    this.skinPanel.active = !active;\n\n    this.updateOperPanle(MenuType.SKIN, !active);\n    if(!active){\n\n      let skelet = SkeletManager.getInstance().skelet;\n      if(!skelet){\n        return console.log('[Menu]:not SpineData!!');\n      }\n      let array = skelet.skins || [];\n\n      if(array.length < 1){\n        array.push('没有皮肤!');\n        array.push('哈哈');\n      }\n\n      let option = this.skinPanel.getComponent(OptionScrollview);\n      option.setData(3,array);\n    }\n  }\n\n  onToggleDebug() {\n    this.updateOperPanle(-1, false);\n  }\n\n  onToggleLoop() {\n    this._loop = !this._loop;\n\n    let param: EventData = new EventData();\n    param.eventType = EventType.CHANGE_SPINE_LOOP;;\n    param.param = this._loop;\n\n    EventManager.getInstance().emit('machine', param);\n\n  }\n\n\n  inputEvent( data: any) {\n    let number =  Number(data.string);\n    console.log('========输入完成!',number);\n\n    let param: EventData = new EventData();\n    param.eventType = EventType.UPDATE_SCALE;;\n    param.param = number;\n\n    EventManager.getInstance().emit('machine', param);\n  }\n}\n\n"]}