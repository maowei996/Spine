{"version":3,"sources":["file:///Users/mac/WorkSpace/maowei/spine/assets/src/Drag.ts"],"names":["_decorator","Component","Node","find","Vec3","Camera","UITransform","ccclass","property","Drag","_distance","start","canvas","node","on","EventType","TOUCH_START","onTouchStart","TOUCH_MOVE","onTouchMove","evt","moveBox","getLocation","touchPos","pos","Camera3D","screenToWorld","x","y","position","parent","getComponent","convertToNodeSpaceAR"],"mappings":";;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,I,OAAAA,I;AAAaC,MAAAA,I,OAAAA,I;AAAwBC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,M,OAAAA,M;AAAQC,MAAAA,W,OAAAA,W;;;;;;;;;OAC7E;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBR,U;;sBAIjBS,I,WADZF,OAAO,CAAC,MAAD,C,UAGLC,QAAQ,CAACH,MAAD,C,2BAHX,MACaI,IADb,SAC0BR,SAD1B,CACoC;AAAA;AAAA;;AAAA;;AAAA,eAKlCS,SALkC,GAKtB,CALsB;AAAA;;AAOlCC,QAAAA,KAAK,GAAI;AACP,cAAIC,MAAM,GAAGT,IAAI,CAAC,QAAD,CAAjB;AACA,eAAKU,IAAL,CAAUC,EAAV,CAAaZ,IAAI,CAACa,SAAL,CAAeC,WAA5B,EAAyC,KAAKC,YAA9C,EAA4D,IAA5D;AACA,eAAKJ,IAAL,CAAUC,EAAV,CAAaZ,IAAI,CAACa,SAAL,CAAeG,UAA5B,EAAwC,KAAKC,WAA7C,EAA0D,IAA1D;AACA,eAAKT,SAAL,GAAiB,GAAjB;AACD;;AAEDO,QAAAA,YAAY,CAACG,GAAD,EAAkB,CAC5B;AACD;;AAEDD,QAAAA,WAAW,CAACC,GAAD,EAAkB;AAC3B,eAAKC,OAAL,CAAaD,GAAG,CAACE,WAAJ,EAAb;AACD;;AAEDD,QAAAA,OAAO,CAAEE,QAAF,EAAkB;AACvB,cAAIC,GAAG,GAAG,KAAKC,QAAL,CAAcC,aAAd,CAA4B,IAAItB,IAAJ,CAASmB,QAAQ,CAACI,CAAlB,EAAqBJ,QAAQ,CAACK,CAA9B,EAAiC,KAAKlB,SAAtC,CAA5B,CAAV;AACA,eAAKG,IAAL,CAAUgB,QAAV,GAAqB,KAAKhB,IAAL,CAAUiB,MAAV,CAAkBC,YAAlB,CAA+BzB,WAA/B,EAA6C0B,oBAA7C,CAAkER,GAAlE,CAArB;AACD;;AAzBiC,O","sourcesContent":["import { _decorator, Component, Node, Label, find, EventTouch, Vec2, Vec3, Camera, UITransform, Slider, view } from 'cc';\nconst { ccclass, property } = _decorator;\n\n\n@ccclass('Drag')\nexport class Drag extends Component {\n\n  @property(Camera)\n  Camera3D !: Camera;\n\n  _distance = 0;\n\n  start () {\n    var canvas = find('Canvas')!;\n    this.node.on(Node.EventType.TOUCH_START, this.onTouchStart, this);\n    this.node.on(Node.EventType.TOUCH_MOVE, this.onTouchMove, this);\n    this._distance = 0.5;\n  }\n\n  onTouchStart(evt: EventTouch) {\n    //this.moveBox(evt.getLocation());\n  }\n\n  onTouchMove(evt: EventTouch) {\n    this.moveBox(evt.getLocation());\n  }\n\n  moveBox (touchPos: Vec2) {\n    let pos = this.Camera3D.screenToWorld(new Vec3(touchPos.x, touchPos.y, this._distance));\n    this.node.position = this.node.parent!.getComponent(UITransform)!.convertToNodeSpaceAR(pos);\n  }\n}"]}